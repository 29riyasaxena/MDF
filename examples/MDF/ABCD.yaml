ABCD:
  format: ModECI MDF v0.3
  generating_application: Python modeci-mdf v0.3.1
  graphs:
    abcd_example:
      edges:
        edge_A_B:
          receiver: B
          receiver_port: input_port1
          sender: A
          sender_port: output_1
        edge_B_C:
          receiver: C
          receiver_port: input_port1
          sender: B
          sender_port: output_1
        edge_C_D:
          receiver: D
          receiver_port: input_port1
          sender: C
          sender_port: output_1
        edge_input0_A:
          receiver: A
          receiver_port: input_port1
          sender: input0
          sender_port: out_port
      nodes:
        A:
          input_ports:
            input_port1: {}
          metadata:
            color: .8 0 0
          output_ports:
            output_1:
              value: linear_func
          parameters:
            intercept:
              value: 1.2
            linear_func:
              args:
                intercept: intercept
                slope: slope
                variable0: input_port1
              function: linear
            slope:
              value: 1.1
        B:
          input_ports:
            input_port1: {}
          metadata:
            color: 0 .8 0
          output_ports:
            output_1:
              value: logistic_func
          parameters:
            bias:
              value: 2.2
            gain:
              value: 2.1
            logistic_func:
              args:
                bias: bias
                gain: gain
                offset: offset
                variable0: input_port1
              function: logistic
            offset:
              value: 2.3
        C:
          input_ports:
            input_port1:
              shape:
              - 1
          metadata:
            color: 0 0 .8
          output_ports:
            output_1:
              value: exponential_func
          parameters:
            bias:
              value: 3.3
            exponential_func:
              args:
                bias: bias
                offset: offset
                rate: rate
                scale: scale
                variable0: input_port1
              function: exponential
            offset:
              value: 3.4
            rate:
              value: 3.2
            scale:
              value: 3.1
        D:
          input_ports:
            input_port1:
              shape:
              - 1
          metadata:
            color: .8 0 .8
          output_ports:
            output_1:
              value: sin_func
          parameters:
            scale:
              value: 4.0
            sin_func:
              args:
                scale: scale
                variable0: input_port1
              function: sin
        input0:
          metadata:
            color: .8 .8 .8
          output_ports:
            out_port:
              value: input_level
          parameters:
            input_level:
              value: 0.0
