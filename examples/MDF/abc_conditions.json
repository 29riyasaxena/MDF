{
    "abc_conditions": {
        "format": "ModECI MDF v0.1",
        "generating_application": "Python modeci-mdf v0.1.3",
        "graphs": {
            "abc_conditions_example": {
                "conditions": {
                    "node_specific": {
                        "input0": {
                            "type": "BeforeNCalls",
                            "args": {
                                "dependency": "input0",
                                "n": 1
                            },
                            "metadata": {"env_name": "description"}

                        },
                        "A": {
                            "type": "Always",
                            "args": {}
                        },
                        "B": {
                            "type": "EveryNCalls",
                            "args": {
                                "dependency": "A",
                                "n": 2
                            }
                        },
                        "C": {
                            "type": "EveryNCalls",
                            "args": {
                                "dependency": "A",
                                "n": 3
                            }
                        }
                    },
                    "termination": {
                        "environment_state_update": {
                            "type": "And",
                            "args": {
                                "dependencies": [
                                    {
                                        "type": "AfterNCalls",
                                        "args": {
                                            "dependency": "C",
                                            "n": 2
                                        }
                                    },
                                    {
                                        "type": "JustRan",
                                        "args": {
                                            "dependency": "A"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "nodes": {
                    "input0": {
                        "parameters": {
                            "input_level": 0.0
                        },
                        "output_ports": {
                            "out_port": {
                                "value": "input_level"
                            }
                        }
                    },
                    "A": {
                        "parameters": {
                            "slope": 2.1,
                            "intercept": 2.2
                        },
                        "input_ports": {
                            "input_port1": {
                                "shape": "(1,)"
                            }
                        },
                        "functions": {
                            "linear_func": {
                                "function": "linear",
                                "args": {
                                    "slope": "slope",
                                    "intercept": "intercept",
                                    "variable0": "input_port1"
                                }
                            }
                        },
                        "output_ports": {
                            "output_1": {
                                "value": "linear_func"
                            }
                        }
                    },
                    "B": {
                        "parameters": {
                            "gain": 1.0,
                            "bias": 0.0,
                            "offset": 0.0
                        },
                        "input_ports": {
                            "input_port1": {
                                "shape": "(1,)"
                            }
                        },
                        "functions": {
                            "logistic_func": {
                                "function": "logistic",
                                "args": {
                                    "gain": "gain",
                                    "bias": "bias",
                                    "offset": "offset",
                                    "variable0": "input_port1"
                                }
                            }
                        },
                        "output_ports": {
                            "output_1": {
                                "value": "logistic_func"
                            }
                        }
                    },
                    "C": {
                        "parameters": {
                            "scale": 1.0,
                            "rate": 1.0,
                            "bias": 0.0,
                            "offset": 0.0
                        },
                        "input_ports": {
                            "input_port1": {
                                "shape": "(1,)"
                            }
                        },
                        "functions": {
                            "exponential_func": {
                                "function": "exponential",
                                "args": {
                                    "scale": "scale",
                                    "rate": "rate",
                                    "bias": "bias",
                                    "offset": "offset",
                                    "variable0": "input_port1"
                                }
                            }
                        },
                        "output_ports": {
                            "output_1": {
                                "value": "exponential_func"
                            }
                        }
                    }
                },
                "edges": {
                    "edge_input0_A": {
                        "sender": "input0",
                        "receiver": "A",
                        "sender_port": "out_port",
                        "receiver_port": "input_port1"
                    },
                    "edge_A_B": {
                        "sender": "A",
                        "receiver": "B",
                        "sender_port": "output_1",
                        "receiver_port": "input_port1"
                    },
                    "edge_A_C": {
                        "sender": "A",
                        "receiver": "C",
                        "sender_port": "output_1",
                        "receiver_port": "input_port1"
                    }
                }
            }
        }
    }
}